.containers {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }
  
  .containers .card {
    position: relative;
    width: 240px;
    height: 300px;
    margin: 30px;
  }
  @media (max-width:1300px) {
    .containers .card{
        width: 170px;
        height: 240px;
        margin: 20px;
    }
}
@media (max-width:1300px) {
    .containers .card{
        width: 150px;
        height: 200px;
        margin: 30px 10px;
    }
}

  .containers .card img{
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    object-fit: cover;
  }
  
  .containers .card:nth-of-type(2) {
    transform: rotate(5deg);
  }
  
  .containers .card .image {

    position: relative;
    width: 100%;
    height: 100%;
    background-size: cover;
    transform: translate(10px, 10px);
  }
  
  .containers .card:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 230px;
    height: 300px;
    border: 15px solid #fff;
    z-index: 1;
    background: linear-gradient(145deg, #ffffff, #e6e6e6);
    box-shadow: 7px 7px 21px #bdbdbd, -7px -7px 21px #ffffff;
    background: transparent;
  }

  @media (max-width:1300px) {
    .containers .card:before{
        width: 170px;
        height: 240px;
        border: 10px solid #fff;
    }
}
@media (max-width:1300px) {
    .containers .card:before{
        width: 150px;
        height: 200px;
    }
}
@media (max-width:500px) {
    .containers .card:before{
        border: 5px solid #fff;
    }
}


  .containers .card:nth-of-type(1)::before {
    filter: url(#wavy1);
  }
  
  .containers .card:nth-of-type(2)::before {
    filter: url(#wavy2);
  }
  
  .containers .card:nth-of-type(3)::before {
    filter: url(#wavy3);
  }
  
  .image1 {
    background-image: url("");
  }
  
  .image2 {
    background-image: url("https://res.cloudinary.com/dswp5qfpm/image/upload/v1597476033/animal/cat_hfwcwm.jpg");
  }
  
  .image3 {
    background-image: url("https://res.cloudinary.com/dswp5qfpm/image/upload/v1597476068/animal/parrot_rjd1vq.jpg");
  }
  
  svg {
    width: 0;
    height: 0;
  }
  
  .containers .card .info {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 20px 20px;
    transform: translate(10px, 10px);
    text-align: center;
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    line-height: 1.4;
    font-size: 20px;
    opacity: 0;
    transition-duration: 1s;
  }

  @media (max-width:1300px) {
    .containers .card .info{
        padding: 14px 14px;
    }
}
@media (max-width:1300px) {
    .containers .card .info{
        padding: 9px;
    }
}
  
  .containers .card:hover .info {
    opacity: 1;
  }
  
/*
.gallery {
    --g: 8px;   
    --s: 400px; 
    
    display: grid;
    border-radius: 50%;
  }
  .gallery > img {
    grid-area: 1/1;
    width: 600px;
    aspect-ratio: 1;
    object-fit: cover;
    border-radius: 50%;
    transform: translate(var(--_x,0),var(--_y,0));
    cursor: pointer;
    z-index: 0;
    transition: .3s, z-index 0s .3s;
  }
  .gallery img:hover {
    --_i: 1;
    z-index: 1;
    transition: transform .2s, clip-path .3s .2s, z-index 0s;
  }
  .gallery:hover img {
    transform: translate(0,0);
  }
  .gallery > img:nth-child(1) {
    clip-path: polygon(50% 50%,calc(50%*var(--_i,0)) calc(120%*var(--_i,0)),0 calc(100%*var(--_i,0)),0 0,100% 0,100% calc(100%*var(--_i,0)),calc(100% - 50%*var(--_i,0)) calc(120%*var(--_i,0)));
    --_y: calc(-1*var(--g))
  }
  .gallery > img:nth-child(2) {
    clip-path: polygon(50% 50%,calc(100% - 120%*var(--_i,0)) calc(50%*var(--_i,0)),calc(100% - 100%*var(--_i,0)) 0,100% 0,100% 100%,calc(100% - 100%*var(--_i,0)) 100%,calc(100% - 120%*var(--_i,0)) calc(100% - 50%*var(--_i,0)));
    --_x: var(--g)
  }
  .gallery > img:nth-child(3) {
    clip-path: polygon(50% 50%,calc(100% - 50%*var(--_i,0)) calc(100% - 120%*var(--_i,0)),100% calc(100% - 120%*var(--_i,0)),100% 100%,0 100%,0 calc(100% - 100%*var(--_i,0)),calc(50%*var(--_i,0)) calc(100% - 120%*var(--_i,0)));
    --_y: var(--g)
  }
  .gallery > img:nth-child(4) {
    clip-path: polygon(50% 50%,calc(120%*var(--_i,0)) calc(50%*var(--_i,0)),calc(100%*var(--_i,0)) 0,0 0,0 100%,calc(100%*var(--_i,0)) 100%,calc(120%*var(--_i,0)) calc(100% - 50%*var(--_i,0)));
    --_x: calc(-1*var(--g))
  }
*/